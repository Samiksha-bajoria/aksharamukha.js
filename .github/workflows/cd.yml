name: CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy to npm
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag and increment version
        id: version
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null)
          echo "Latest tag: $LATEST_TAG"

          # Extract version without 'v' prefix
          VERSION_WITHOUT_V=${LATEST_TAG#v}
          echo "Version without v: $VERSION_WITHOUT_V"

          # Extract the base version and increment number
          if [[ $VERSION_WITHOUT_V =~ ^([0-9]+\.[0-9]+\.[0-9]+)-([0-9]+)$ ]]; then
            BASE_VERSION="${BASH_REMATCH[1]}"
            INCREMENT_NUMBER="${BASH_REMATCH[2]}"
          else
            echo "Error: Tag format doesn't match expected pattern"
            exit 1
          fi

          # Increment the number
          NEW_INCREMENT=$((INCREMENT_NUMBER + 1))
          NEW_VERSION="$BASE_VERSION-$NEW_INCREMENT"

          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      - name: Download wheels
        run: npm run download-wheels

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Update version and create tag
        run: |
          NEW_VERSION="${{ steps.version.outputs.new_version }}"

          # Update package.json version
          npm version $NEW_VERSION --no-git-tag-version

          # Commit the version change
          git add package.json package-lock.json
          git commit -m "chore: bump version to $NEW_VERSION"

          # Create and push tag
          git tag "v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release v${{ steps.version.outputs.new_version }}
          body: Automated release v${{ steps.version.outputs.new_version }}.
          draft: false
          prerelease: false
